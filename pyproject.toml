[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Robert Huber", email = "rhuber@marum.de"},
  {name = "Anusuriya Devaraju", email = "anusuriya.devaraju@googlemail.com"}
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Information Analysis"
]
dependencies = [
  # dependencies with major version on zero are defined with
  # major.minor.patch, because they can potentially introduce breaking changes
  # in minor version updates anytime
  "beautifulsoup4~=4.12",
  "configparser~=6.0",
  "connexion[flask,uvicorn,swagger-ui]~=3.0",
  "extruct~=0.16.0",
  "feedparser~=6.0",
  "flask-cors~=4.0",
  "flask-limiter~=3.5",
  "hashid~=3.1.4",
  "idutils~=1.2",
  "jmespath~=1.0",
  "levenshtein~=0.25.0",
  "lxml==5.2.1",
  "pandas~=2.1",
  "pyRdfa3~=3.5",
  "pyld~=2.0",
  "pyyaml~=6.0",
  "rapidfuzz~=3.3",
  "rdflib~=7.0",
  "requests~=2.31",
  "sparqlwrapper~=2.0",
  "tika~=2.6",
  "tldextract~=5.0",
  "urlextract~=1.8",
  "pygithub~=2.1"
]
description = "FUJI (FAIRsFAIR Data Objects Assessment Service), A service to evaluate FAIR data objects based on FAIRsFAIR Metrics"
keywords = [
  "PANGAEA",
  "FAIRsFAIR",
  "FAIR Principles",
  "Data Object Assessment",
  "OpenAPI",
  "FAIR",
  "Research Data",
  "FAIR data",
  "Metadata harvesting",
  "FAIR4RS"
]
license = "MIT"
name = "fuji"
readme = "README.md"
requires-python = "~=3.11"  # at the moment only Python 3.11 is supported
version = "3.2.0"

[project.optional-dependencies]
dev = [
  "fuji[lint]",
  "fuji[testing]"
]
docs = [
  "myst-parser~=2.0",
  "sphinx~=7.2",
  "sphinx-rtd-theme~=2.0"
]
lint = [
  "pre-commit~=3.4"
]
report = [
  "bokeh~=3.2",
  "jupyter~=1.0"
]
testing = [
  "genbadge[coverage]~=1.1",
  "pytest~=8.0",
  "pytest-cov~=5.0",
  "pytest-randomly~=3.15",
  "pytest-recording~=0.13",
  "pytest-xdist~=3.3"
]

[project.urls]
Homepage = "https://www.f-uji.net"
Issues = "https://github.com/pangaea-data-publisher/fuji/issues"
Source = "https://github.com/pangaea-data-publisher/fuji"

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
parallel = true
source = ["fuji_server"]

[tool.hatch.build]
include = [
  "docs",
  "fuji_server",
  "AUTHORS",
  "LICENSE",
  "README.md"
]

[tool.hatch.build.targets.wheel]
packages = ["fuji_server"]

[tool.hatch.envs.default]
dev-mode = true
features = [
  "lint",
  "testing"
]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov {args}"
cov-badge = "genbadge coverage --input-file=pytest-cobertura.xml --output-file=./reports/coverage/coveragebadge.svg"
cov-ci = "pytest --cov --junitxml=pytest-junit.xml --cov-report=xml:pytest-cobertura.xml --cov-report=html:./reports/coverage/ {args}"
lint = "pre-commit run --all-files --color=always {args}"
test = "pytest {args}"

[tool.pytest.ini_options]
filterwarnings = [
  # warnings from pyrdfa
  "ignore: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12:DeprecationWarning",
  # warnings from feedparser
  "ignore:'cgi' is deprecated and slated for removal in Python 3.13:DeprecationWarning",
  # warnings from tika
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
  "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning"
]
markers = [
  "manual",  # tests which should be triggered manual only
  "noci",  # tests which should not run on the CI
  "regression",  # tests which run a fuji as a whole
  "smoke"  # tests which run very fast
]
testpaths = "tests"

[tool.ruff]
line-length = 120
# Ref: https://docs.astral.sh/ruff/configuration/
src = ["fuji_server"]
target-version = "py311"

[tool.ruff.lint]
extend-select = [
  "I",  # isort
  "UP",  # pyupgrade
  "RUF"  # ruff
]
ignore = [
  "E722",  # bare-except
  "RUF012"  # mutable-class-default
]

[tool.ruff.lint.isort]
known-first-party = ["fuji_server", "tests"]
